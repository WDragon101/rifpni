% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genus.R
\name{genus}
\alias{genus}
\title{genus() is used to implement retrieval from IFPNI's genus list accroding to different filting conditions.}
\usage{
genus(
  name = NULL,
  searchOnlyByFirstSymbols = "",
  order = "name",
  orderDirection = "asc",
  author = "",
  originalSpelling = "",
  yearFrom = "",
  yearTo = "",
  rank = FALSE
)
}
\arguments{
\item{name}{The name or partial name of genus taxon.}

\item{searchOnlyByFirstSymbols}{Whether to filter records whose Name starts with name parameter, default no.}

\item{order}{Default is "name". Decide to sort the results by name("name") or year("yearFrom").}

\item{orderDirection}{Default is "asc". Determines whether the results are in positive("asc") or reverse("desc") order.}

\item{author}{Select the record authorized by specific person.}

\item{originalSpelling}{Select the record whose original spelling is given string.}

\item{yearFrom}{Records published after the year of "yearFrom".}

\item{yearTo}{Records published before the year of "yearTo".}

\item{rank}{Select records in one or more specific classification levels.
Default is FALSE, not specifying any classification level means not filtering.
Either character type or numeric type can be used. The supported characters of classification levels are c('Genus', 'Supergenus', 'Group', 'Subgroup', 'Unranked'), and the corresponding numbers are c(68, 43, 69, 45, 56).}
}
\value{
A dataframe with detailed information of result.
}
\description{
genus() is used to implement retrieval from IFPNI's genus list accroding to different filting conditions.
}
\examples{
# let's see how many taxa start with "sor" in the genus list on IFPNI.
sor_genus <- genus("sor", searchOnlyByFirstSymbols = "on")

# Let's try the most daring operation.
# If you do not pass a value to any argument, you get a dataframe that stores the details of all the taxa in the genus list on IFPNI.

all_genus_url <- basic_genus()
brief_all_genus <- brief_information(all_genus_url)
write.csv(brief_all_genus, "./data/brief.all_genus.csv")

# âœ” There are 1754 pages found.
# Collected 1754 pages from IFPNI. Elapsed Time: 01:31:21.3

brief_all_genus_urls <- read.csv("./data/brief_all_genus.csv")$URL

while (TRUE) {
  tryCatch({
    all_genus_info <- detail_graber(brief_all_genus_urls, output_file = "./data/all_genus_info.csv")
   }, warning = function(w){
      print(w)
      cat("\n")
      Sys.sleep(10)
   }, error = function(e){
      print(e)
      cat("\n")
      Sys.sleep(10)
   }, finally = {
      break
   })
}
}
